<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="login" type="text" name="login" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    console.log('Running onload')

const postUserId = async function (url, idTokenUser) {
  const response = await fetch(url, {
    method: "POST",
    ceredentials: "same-origin",
    headers: {
      "Contemnt-Type": "application/json",
    },
    body: JSON.stringify(data),
  });
  return response;
};


    const firebaseConfig = {
      // CS5356 TODO #2
      // Copy your Firebase config here too
      apiKey: "AIzaSyCInJCl7_INc7ePHM9eAQ_GqfIKo7VsR78",
      authDomain: "jsp285-ruffhouse.firebaseapp.com",
      projectId: "jsp285-ruffhouse",
      storageBucket: "jsp285-ruffhouse.appspot.com",
      messagingSenderId: "807882837846",
      appId: "1:807882837846:web:d26950361e5743c6ad50f7",
      measurementId: "G-S1MP2KNT8J"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

        app.auth().createUserWithEmailAndPassword(login, password)
          .then((user) => {
            // Signed in 
            //console.log('userCredential',userCredential)
            var user = userCredential.user;

            return user.getIdToken().the((idToken) => {
              return postUserId("/sessionLogin", idToken);
            }).catch((error) => {
              console.log(error.code, error.message);
            }).then(() => {
              window.location.assign("/dashboard");
            }).catch((error) => {
              let errorCode = error.code;
              let errorMessage = error.message;
            })

            return false;
          });
      })
  }
</script>

</html>